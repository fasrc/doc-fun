name: Run Tests

on:
  push:
    branches: [ main, develop, 'feature/*' ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.toml'
      - '.github/workflows/tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.toml'
  workflow_dispatch:  # Allow manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"
    
    - name: Run tests with coverage
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        python -m pytest --cov=src/doc_generator --cov-report=xml --cov-report=term
    
    - name: Upload coverage reports
      if: matrix.python-version == '3.10'  # Only upload once
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false  # Don't fail if codecov is down
    
    - name: Generate coverage badge
      if: matrix.python-version == '3.10'
      run: |
        coverage_percent=$(python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); root = tree.getroot(); print(f\"{float(root.attrib['line-rate']) * 100:.0f}\")")
        echo "Coverage: ${coverage_percent}%"
        echo "COVERAGE_PERCENT=${coverage_percent}" >> $GITHUB_ENV
    
    - name: Comment PR with test results
      if: github.event_name == 'pull_request' && matrix.python-version == '3.10'
      uses: actions/github-script@v7
      with:
        script: |
          const coverage = process.env.COVERAGE_PERCENT;
          const body = `## Test Results
          
          âœ… Tests passed on Python ${{ matrix.python-version }}
          ðŸ“Š Code coverage: ${coverage}%
          
          View full test report in the Actions tab.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });
      continue-on-error: true  # Don't fail if commenting fails

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run black formatter check
      run: |
        black --check src/ tests/
      continue-on-error: true  # Don't fail build on format issues
    
    - name: Run flake8 linter
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true  # Don't fail build on style issues