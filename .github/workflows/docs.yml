name: Build and Deploy Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'src/doc_generator/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for git info

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mkdocs-material mkdocstrings[python]
        # Install the package itself for API docs
        pip install -e .

    - name: Configure Git for mkdocs-material
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

    - name: Build documentation
      run: |
        mkdocs build --clean --strict
        
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation-site
        path: site/
        
    - name: Setup Pages (if deploying to GitHub Pages)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-pages-artifact@v3
      with:
        path: site/

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  test-docs:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mkdocs-material mkdocstrings[python]
        pip install -e .

    - name: Test documentation build
      run: |
        mkdocs build --clean --strict
        
    - name: Check for broken links (basic)
      run: |
        # Simple check for obvious issues in built HTML
        find site/ -name "*.html" -exec grep -l "404\|error\|broken" {} \; || true
        
    - name: Validate HTML structure
      run: |
        # Check that key pages exist
        test -f site/index.html
        test -f site/guides/installation/index.html
        test -f site/guides/getting-started/index.html
        test -f site/api/core/index.html
        echo "âœ… Key documentation pages found"

  # Optional: Deploy preview for PRs (requires additional setup)
  deploy-preview:
    if: github.event_name == 'pull_request'
    needs: test-docs
    runs-on: ubuntu-latest
    
    steps:
    - name: Download documentation artifacts
      uses: actions/download-artifact@v4
      with:
        name: documentation-site
        path: site/
        
    - name: Deploy PR preview
      run: |
        echo "ðŸš§ PR preview deployment would go here"
        echo "Consider using services like Netlify, Vercel, or Surge.sh"
        echo "Preview would be available at: https://pr-${{ github.event.number }}.doc-generator.dev"