[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "doc-generator"
version = "2.3.0"
description = "AI-powered documentation generator for FASRC with plugin-based recommendations"
authors = [
    {name = "FASRC Research Computing", email = "rchelp@fas.harvard.edu"}
]
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["documentation", "ai", "hpc", "research-computing", "openai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Documentation",
]
requires-python = ">=3.8"
dependencies = [
    "openai>=1.0.0",
    "anthropic>=0.25.0",
    "pyyaml>=6.0",
    "python-dotenv>=0.19.0",
    "beautifulsoup4>=4.11.0",
    "pandas>=1.5.0",
    "tabulate>=0.9.0",
    "requests>=2.28.0",
    "numpy>=1.21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]

[project.urls]
Homepage = "https://github.com/fasrc/doc-fun"
Repository = "https://github.com/fasrc/doc-fun"
Documentation = "https://github.com/fasrc/doc-fun/blob/main/README.md"
"Bug Tracker" = "https://github.com/fasrc/doc-fun/issues"

[project.scripts]
doc-gen = "doc_generator.cli:main"

[project.entry-points."doc_generator.plugins"]
modules = "doc_generator.plugins.modules:ModuleRecommender"

[project.entry-points."doc_generator.analysis"]
compiler = "doc_generator.analysis.compiler:DocumentCompiler"
reporter = "doc_generator.analysis.reporter:AnalysisReporter"
link_validator = "doc_generator.analysis.link_validator:LinkValidator"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
doc_generator = ["config/*.yaml"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "openai.*",
    "pandas.*",
    "beautifulsoup4.*",
    "bs4.*",
    "tabulate.*",
]
ignore_missing_imports = true